package com.morphgame.morphgame;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

//For this I am using SQLite to store our leaderboard data
//this is just a temporary solution so we can work on other features
//We will be storing our data using google play game services on the app version

public class LeaderBoard extends SQLiteOpenHelper{
	
	  public static final String TABLE_COMMENTS = "comments";
	  public static final String COLUMN_ID = "_id";
	  public static final String COLUMN_NAME = "name";
	  public static final String COLUMN_SCORE = "score";

	  private static final String DATABASE_NAME = "leaderboard.db";
	  private static final int DATABASE_VERSION = 1;

	  
	  // Database creation sql statement
	  private static final String DATABASE_CREATE = "create table "
	      + TABLE_COMMENTS + "(" + COLUMN_ID
	      + " integer primary key autoincrement, " + COLUMN_NAME
	      + " text not null, COLUMN_SCORE text not null); ";
	private int score;
	  
	public LeaderBoard(Context context) {
	    super(context, DATABASE_NAME, null, DATABASE_VERSION);
	  }
	
	  @Override
	  public void onCreate(SQLiteDatabase database) {
	    database.execSQL(DATABASE_CREATE);
	  }

	  @Override
	  public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
	    Log.w(LeaderBoard.class.getName(),
	        "Upgrading database from version " + oldVersion + " to "
	            + newVersion + ", which will destroy all old data");
	    db.execSQL("DROP TABLE IF EXISTS " + TABLE_COMMENTS);
	    onCreate(db);
	  }

	} 

	
	public void newScore(int a){
		score = a; 
	}
	
	public void insertScore(String n){
		PreparedStatement stmt1 = null;
		name = n;
		
		try {
			c = DriverManager.getConnection("jdbc:sqlite:leaderboard.db");
			c.setAutoCommit(false);
			stmt = c.createStatement();
		ResultSet rs = stmt.executeQuery( "SELECT * FROM LEADERBOARD;" );	
		if(rs.next()){
	  		sql = "INSERT INTO LEADERBOARD (ID,NAME,SCORE) " +
	  			  "VALUES ((SELECT max(ID) FROM LEADERBOARD)+1,?,?)";
		}else{
			sql = "INSERT INTO LEADERBOARD (ID,NAME,SCORE) " +
		  			 "VALUES (1,?,?)";
		}
		
		stmt1 =c.prepareStatement(sql);
        stmt1.setString(1, name);
        stmt1.setInt(2, score);
  		stmt1.executeUpdate();
		
  		stmt.close();
  		stmt1.close();
    	c.commit();
      	c.close();
      	 System.out.println("inserted in database successfully");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public String getScores(int num){
    	String output = "";
		try {
			c = DriverManager.getConnection("jdbc:sqlite:leaderboard.db");
		
  		stmt = c.createStatement();
	  	ResultSet rs = stmt.executeQuery( "SELECT * FROM LEADERBOARD ORDER BY SCORE DESC;" );
	  	
	  	int i = 0;
	  	while(rs.next() && i < num){
	  		id = rs.getInt("id");
	  		name = rs.getString("name");
	  		score = rs.getInt("score");
	  		output+= i+1 + " " + name +" " + score + "\n" + " ";
	  		i++;
	  	}
	  
	  	rs.close();
	  	stmt.close();
	  	c.close();
    	} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return output;
	}	
	
	public Integer getScore(){
		return score;
	}


}
*/